(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{661:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"列表部分单元格合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表部分单元格合并"}},[t._v("#")]),t._v(" 列表部分单元格合并")]),t._v(" "),a("blockquote",[a("p",[t._v("需求背景：展示数据的列表中第一列时间相同，合并单元格。")])]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-table")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-loading")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("loading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":row-class-name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("isCell ? setCellClass : "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@cell-mouse-enter")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handleMouse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@cell-mouse-leave")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handleMouseLeve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":data")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tableData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":span-method")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("objectSpanMethod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("el-table")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("table外层这里需要注意以下 两 点")]),t._v(" "),a("ul",[a("li",[t._v('关注点1：这里需要绑定 :span-method="objectSpanMethod" 方法，在里面写具体逻辑（objectSpanMethod）')]),t._v(" "),a("li",[t._v('关注点2：关于样式问题，解决方式：绑定这3个属性，\n:row-class-name="isCell ? setCellClass : \'\'"\n@cell-mouse-enter="handleMouse"\n@cell-mouse-leave="handleMouseLeve"')])]),t._v(" "),a("p",[t._v("针对关注点1：")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("data() {\n    return{\n        spanArr: [],\n        pos: 0, // spanArr 的索引\n    }\n},\nmethods:{\n    // 通过请求拿到列表数据\n    getList(data) {\n        this.handeleTableAry(data) // data是我们的列表数据\n    },\n    handeleTableAry(data) {\n        this.spanArr = [];\n        data.forEach((item, index) => {\n            if (index === 0) {\n                this.spanArr.push(1);\n                this.pos = 0;\n            } else {\n                // 判断当前元素与上一个元素是否相同 用自己的判定标准替换ownerWeek\n                if (item.ownerWeek === data[index - 1].ownerWeek) { \n                    this.spanArr[this.pos] += 1;\n                    this.spanArr.push(0);\n                } else {\n                    this.spanArr.push(1);\n                    this.pos = index;\n                }\n            }\n        })\n    },\n    objectSpanMethod({ row, column, rowIndex, columnIndex }) {\n        if (columnIndex === 0) { // 第一列\n            const _row = this.spanArr[rowIndex]; \n            const _col = _row > 0 ? 1 : 0; \n            return { \n                rowspan: _row, // 合并行数\n                colspan: _col, // 当前是否往下合并 1合并 0不合并\n            };\n        }\n    },\n}\n")])])]),a("p",[t._v("针对关注点2：\n除了顶部 绑定的3个属性，我们需要借助js解决，通过鼠标移入移出添加动态类名，以此判定。")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("data() {\n    return{\n        cellIndex: null, // 当前所属单元格唯一标志\n        isCell: false, // 是否移入标志\n    }\n},\nmethods: {\n    handleMouse(row, column, cell, event) { // 单元格移入事件\n        this.cellIndex = row.ownerWeek; // 记录当前判断可以合并单元格的标志\n        this.isCell = true; // \n    },\n    handleMouseLeve() { // 单元格移除事件\n        this.isCell = false;\n    },\n    setCellClass({ row, rowIndex }) { // 设置行样式\n        // 查看对应rowIndex 是否是第一个向下合并的单元格 还是 被合并的单元格\n        const _row = this.spanArr[rowIndex];  \n        const _col = _row > 0 ? 1 : 0; \n        // 相当于给第一列（是你需要的那列） 只要鼠标移入了一组单元格中除了第一行的"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("其他行")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        // 那么第一列(你需要的那列)会一直高亮, return 一个类名\n        if (_col &&  row.ownerWeek === this.cellIndex) return 'cellClass';  \n    },\n}\n")])])]),a("p",[t._v("接下来最后一步,在css中添加样式，值得注意的是，这个style不要添加scope，\n不然不能覆盖自带的。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('<style lang="scss">\n.el-table')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".cellClass,.hover-row")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("td:nth-child(1)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f5f7fa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f5f7fa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n<style/>\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);